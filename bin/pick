#!/usr/bin/env sh

# Cherry-pick commits from the output of an interactive rebase.
#
# Changelog:
#   2017-02-06  Add pick

# The MIT License (MIT)
# Copyright (c) 2017 Nelo-T. wallus <nelo@wallus.de>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
# OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

. common

git rev-parse --is-inside-work-tree >/dev/null || die Not inside a git repository

hash=$1
shift
message="$@"

branch() {
    git rev-parse --abbrev-ref HEAD
}

log debug "Checking if hash $hash is valid"
if ! git rev-parse --verify $hash; then
    die "Hash $hash is not valid, exiting"
fi

log info "Checking if hash $hash is in this branch"
if git branch --contains=$hash --merged="$(branch)" | grep -qi "$(branch)"; then
    log info "Branch contains commit $hash, not picking"
    exit 0
fi

log info "Hash $hash is not in this branch, cherry picking"
git cherry-pick $hash
