#!/usr/bin/env sh

# Opens all modified files in splits.
#
# in git dir:
#   git stageit
# or:
#   git config --global alias.st stageit
#   git st
#
# Also look at vdwrap: https://github.com/Osse/vdwrap
#
# Changelog:
#   2023-12-04 Fix passing filepaths with spaces
#   2025-04-04 Allow filtering changed files by pattern

# The MIT License (MIT)
# Copyright (c) 2016 Nelo-T. wallus <nelo@wallus.de>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
# OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

commandfile="commands.vim"
finish() {
    rm $commandfile
}
trap finish EXIT INT

_changed_files() {
    git status --porcelain | grep "$1" | awk '{ print $2 }'
}

changed_files() {
    if test $# -eq 0; then
        _changed_files "^[ M]"
        return
    fi

    for f in "$@"; do
        _changed_files "$f"
    done
}


{
    changed_files "$@" | while read file; do
        test ! -d "$file" && echo "tabnew $file | Gdiff"
    done
    echo 'tabfirst | tabclose'
} > $commandfile

${GIT_EDITOR:-${EDITOR:-vim}} -c "silent source $commandfile"
