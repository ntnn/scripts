emulate -L zsh

# ZSH preexec hook. Checks for a .go file name and compiles it, if an
# executable was not found.
#
# E.g.:
#   $ cat ~/bin/testthis.go
#   package main
#   import "fmt"
#
#   func main() {
#       fmt.Println("Works")
#   }
#   $ autoload -Uz go-compile
#   $ preexec_functions+=(go-compile)
#   $ testthis
#   Works
#
# zshrc:
# autoload -Uz go-compile add-zsh-hook
# add-zsh-hook preexec go-compile
#
# Changelog:
#   2016-11-09  Add go-compile
#
# The MIT License (MIT)
# Copyright (c) 2016 Nelo-T. wallus <nelo@wallus.de>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
# OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

cmd=${3[(w)1]}

if cmd_alias=$(alias $cmd); then
    cmd=$cmd_alias
fi

if which $cmd &>/dev/null; then
    return
fi

for folder in $path; do
    if [[ -f $folder/$cmd.go ]]; then
        go build -o $folder/$cmd $folder/$cmd.go
        return
    fi
done
