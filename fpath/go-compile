emulate -L zsh

# ZSH accept-line function.
# Does:
#   - compiles .go files if found
#       execute `somescript`, if a file `somescript.go` exists in the
#       path go-compile will compile it
#   - compiles if .go file is newer than binary
#   - rewrites buffer from `file.go` to `file`, if needed
#       execute `somescript.go`, go-compile rewrites the buffer dropping
#       the '.go'
#   - also works for relative and absolute paths
#
# E.g.:
#   $ cat ~/bin/testthis.go
#   package main
#   import "fmt"
#
#   func main() {
#       fmt.Println("Works")
#   }
#   $ autoload -Uz go-compile
#   $ my-accept-line() { go-compile; zle accept-line }
#   # zle -N my-accept-line
#   # bindkey '^M' my-accept-line
#   $ testthis
#   Works
#
# zshrc:
#   autoload -Uz go-compile
#   my-accept-line() {
#     go-compile
#     zle accept-line
#   }
#   zle -N my-accept-line
#   bindkey '^M' my-accept-line
#
# Changelog:
#   2017-02-07  Drop expansion, filtered above
#   2017-02-07  Fix added space between cmd/arguments
#   2017-02-07  Fix invalid subscript range on empty buffer
#   2016-11-10  Use as accept-line hook instead of preexec hook to modify BUFFER
#   2016-11-09  Add go-compile
#
# The MIT License (MIT)
# Copyright (c) 2016 Nelo-T. wallus <nelo@wallus.de>
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE
# OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

_full_path() {
    # return early on full or relative paths
    case $1 in
        (/*|./*)
            echo $1
            return
            ;;
    esac

    for folder in $path; do
        if [[ -f $folder/$1 ]]; then
            echo $folder/$1
            return
        fi
    done

    return 1
}

[[ "$BUFFER" =~ '^[[:space:]]*$' ]] && return 0

cmd=${BUFFER[(w)1]}
cmdline=$BUFFER
cmdline[(w)1]=""

# expand aliases
if cmd_alias=$(alias $cmd); then
    cmd=$cmd_alias
fi

# check for .go suffix and replace in command line to actual binary
if [[ "${cmd##*.}" == "go" ]]; then
    cmd=${cmd%.go}
    BUFFER="${cmd}${cmdline}"
fi

# search for path
gofile=$(_full_path $cmd.go)
[[ -z "$gofile" || ! -f $gofile ]] && return 0

cmdfile=${gofile%.go}

# if the gofile is older than the binary no action needs to be taken
if [[ $gofile -ot $cmdfile ]]; then
    return 0
fi

go build -o $cmdfile $gofile
